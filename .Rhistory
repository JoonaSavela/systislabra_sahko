3*5
demo()
1+1
a
a = 1
a
demo()
iris
library(ggvis)
install.packages("ggvis")
library(ggvis)
iris %>% ggvis(~Sepal.Length, ~Sepal.Width, fill = ~Species) %>% layer_points()
iris %>% ggvis(~Petal.Length, ~Petal.Width, fill = ~Species) %>% layer_points()
library(class)
any(grepl("class", installed.packages()))
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
ind
library(gmodels)
install.packages("gmodels")
library(gmodels)
library(caret)
install.packages("caret")
library(caret)
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
bye()
swirl()
bye()
library(swirl)
swirl()
info()
play()
getwd()
nxt()
play()
?dir.create
nxt()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
?file.path
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
list.dirs()
demo()
?rnorm
x <- rnorm(500, 58, 12)
hist(x)
x <- rnorm(500, 58, 10)
hist(x)
x <- rnorm(5000, 58, 10)
hist(x)
x <- rnorm(5000, 58, 7)
hist(x)
?runif
setClass(
"heart",
slots = list(
f = "numeric",
phase = "numeric",
)
)
hearts <- c()
for (i in 1:10000) {
fr <- rnorm(1, 58, 7) / 60
p <- runif(1, 0, 1 / f)
hearts <- c(hearts, new("heart", f = fr, phase = p))
}
setClass(
"heart",
slots = list(
f = "numeric",
phase = "numeric",
t = "numeric"
)
)
hearts <- c()
for (i in 1:10000) {
fr <- rnorm(1, 58, 7) / 60
p <- runif(1, 0, 1 / fr)
hearts <- c(hearts, new("heart", f = fr, phase = p, t = 0))
}
hearts
length(hearts)
library(swirl)
swirl()
?:
:
quit()
setwd("~/systislabra_sahko")
setwd("~/systislabra_sahko")
eletemp = read.table(file = "sahko.csv", sep = ";", dec = ",", skip = 1)
ele = ts(eletemp[[1]][1:816], start = 1, frequency = 24)
L1 = 168
L2 = 24
dele168 = diff(ele, lag = L1, differences = 1)
malli = arima(dele168, order = c(1,1,1), seasonal = list(order = c(1,1,1), period = L2), method = "CSS")
enne = predict(malli, n.ahead = 24)
ennuste = c(1:24)
clyla = c(1:24)
clala = c(1:24)
for (x in c(1:24)) {
ennuste[x] = ele[816-L1+x] + enne$pred[x]
clyla[x] = ennuste[x] + 1.96*enne$se[x]
clala[x] = ennuste[x] - 1.96*enne$se[x]
}
ennuste = ts(ennuste, start = c(35,1), frequency = 24)
clyla = ts(clyla, start = c(35,1), frequency = 24)
clala = ts(clala, start = c(35,1), frequency = 24)
ts.plot(ennuste, clyla, clala, col = c("blue", "blue", "blue"))
