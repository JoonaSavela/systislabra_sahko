3*5
demo()
1+1
a
a = 1
a
demo()
iris
library(ggvis)
install.packages("ggvis")
library(ggvis)
iris %>% ggvis(~Sepal.Length, ~Sepal.Width, fill = ~Species) %>% layer_points()
iris %>% ggvis(~Petal.Length, ~Petal.Width, fill = ~Species) %>% layer_points()
library(class)
any(grepl("class", installed.packages()))
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
ind
library(gmodels)
install.packages("gmodels")
library(gmodels)
library(caret)
install.packages("caret")
library(caret)
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
bye()
swirl()
bye()
library(swirl)
swirl()
info()
play()
getwd()
nxt()
play()
?dir.create
nxt()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
?file.path
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
list.dirs()
demo()
?rnorm
x <- rnorm(500, 58, 12)
hist(x)
x <- rnorm(500, 58, 10)
hist(x)
x <- rnorm(5000, 58, 10)
hist(x)
x <- rnorm(5000, 58, 7)
hist(x)
?runif
setClass(
"heart",
slots = list(
f = "numeric",
phase = "numeric",
)
)
hearts <- c()
for (i in 1:10000) {
fr <- rnorm(1, 58, 7) / 60
p <- runif(1, 0, 1 / f)
hearts <- c(hearts, new("heart", f = fr, phase = p))
}
setClass(
"heart",
slots = list(
f = "numeric",
phase = "numeric",
t = "numeric"
)
)
hearts <- c()
for (i in 1:10000) {
fr <- rnorm(1, 58, 7) / 60
p <- runif(1, 0, 1 / fr)
hearts <- c(hearts, new("heart", f = fr, phase = p, t = 0))
}
hearts
length(hearts)
library(swirl)
swirl()
?:
:
quit()
rt(4, 4)
pt(0.05, 5)
pt(0.05, 5)
pt(0.1, 5)
pt(1, 5)
pt(10, 5)
dt(0.05, 5)
dt(0.5, 5)
qt(0.05, 5)
qt(1, 5)
qt(0, 5)
qt(10, 5)
qt(0.05, 5)
qt(0.95, 5)
x <- c(-10, -17, -4, -7, -5, -6, -11)
y <- c(105, 163, 43, 69, 48, 56, 115)
plot(y~x)
abline(lm(y~x))
m <- lm(y~x)
summary(m)
m$residuals
sd(m$residuals)
var(m$residuals)
?ARIMAacf
?ARMAacf
ARMAacf(ar = c(0.5), ma=c(0.5))
ARMAacf(ar = c(0.5), ma=c(0.5), lag.max = 20)
ARMAacf(ar = c(0.5, 0.4), ma=c(0.5), lag.max = 20)
ARMAacf(ar = c(0.5, 0.4), ma=c(0.5), lag.max = 20, pacf = T)
setwd("~/systislabra_sahko")
eletemp = read.table(file = "sahko.csv",
sep = ";",
dec = ",",
skip = 1,
col.names = c('kWh','Celcius'))
ele = ts(eletemp$kWh[1:816], start = 1, frequency = 24)
temp = ts(eletemp$Celcius, start = 1, frequency = 24)
temp816 = ts(eletemp$Celcius[1:816], start = 1, frequency = 24)
temp24 = ts(eletemp$Celcius[817:840], start = c(35,1), frequency = 24)
ts.plot(ele,
xlab = "aika/vrk",
ylab = "kulutus/kWh")
ts.plot(temp816,temp24,
xlab = "aika/vrk",
ylab = expression(~degree~C),
col = c("black", "blue"))
par(mfrow=c(2,2))
acf(ele, lag.max=168)
acf(ele, lag.max=168, type = "partial")
acf(temp, lag.max=168)
acf(temp, lag.max=168, type = "partial")
par(mfrow=c(1,1))
ccf(ele,temp, lag.max=168)
L1 = 168
L2 = 24
d = 1
S = L2
D = 1
dele168 <- diff(ele, lag = L1, differences = 1)
dtemp168 <- diff(temp, lag = L1, differences = 1)
ts.plot(dele168,
xlab = "aika/vrk",
ylab = "kulutus/kWh")
ts.plot(dtemp168,
xlab = "aika/vrk",
ylab = expression(~degree~C),
col = c("black", "blue"))
par(mfrow=c(2,2))
acf(dele168, lag.max=168)
acf(dele168, lag.max=168, type = "partial")
acf(dtemp168, lag.max=168)
acf(dtemp168, lag.max=168, type = "partial")
par(mfrow=c(1,1))
ccf(dele168, dtemp168, lag.max=168)
dele <- dele168
dtemp <- dtemp168
if (d > 0) {
dtemp <- diff(dtemp, lag = 1, differences = d)
dele <- diff(dele, lag = 1, differences = d)
}
if (D > 0) {
dtemp <- diff(dtemp, lag = L2, differences = D)
dele <- diff(dele, lag = L2, differences = D)
}
ts.plot(dele,
xlab = "aika/vrk",
ylab = "kulutus/kWh")
ts.plot(dtemp,
xlab = "aika/vrk",
ylab = expression(~degree~C),
col = c("black", "blue"))
par(mfrow=c(2,2))
acf(dele, lag.max=168)
acf(dele, lag.max=168, type = "partial")
acf(dtemp, lag.max=168)
acf(dtemp, lag.max=168, type = "partial")
par(mfrow=c(1,1))
ccf(dele,dtemp, lag.max=168)
p = 1
q = 1
P = 1
Q = 1
L = 0
n <- length(dele168)
tempestimointi = dtemp168[1:(n-L)]
tempennuste = dtemp168[(n-L+1):(n-L+24)]
eleestimointi = dele168[(1+L):n]
malli = arima(eleestimointi,
order = c(p,d,q),
seasonal = list(order = c(P, D, Q), period = S),
xreg = tempestimointi,
method = "CSS")
enne = predict(malli,
n.ahead = 24,
newxreg = tempennuste)
ennuste = c(1:24)
clyla = c(1:24)
clala = c(1:24)
for (x in c(1:24)) {
ennuste[x] = ele[816-L1+x] + enne$pred[x]
clyla[x] = ennuste[x] + 1.96*enne$se[x]
clala[x] = ennuste[x] - 1.96*enne$se[x]
}
ennuste = ts(ennuste, start = c(35,1), frequency = 24)
clyla = ts(clyla, start = c(35,1), frequency = 24)
clala = ts(clala, start = c(35,1), frequency = 24)
ts.plot(ennuste, clyla, clala, col = c("black", "blue", "blue"), main = "Ennuste ja  95 %:n luottamusv?lit")
ts.plot(ele,
ennuste,
col = c("black", "blue"),
main = "Ennuste")
ts.plot(ele,
ennuste,
clyla,
clala,
col = c("black", "blue", "red", "red"),
main = "Ennuste ja 95 %:n luottamusv?lit")
ts.plot(ts(ele[(816-48+1):816], start = c(33,1), frequency = 24),
ennuste,
clyla,
clala,
col = c("black", "blue", "red", "red"),
main = "Ennuste ja 95 %:n luottamusv?lit")
ts.plot(ts(ele[(816-168+1):(816-168+24)], start = c(35,1), frequency = 24),
ennuste,
col = c("black", "blue"),
main = "Ennuste ja edellisen viikon arvo")
acf(malli$residuals, lag.max = 168)
hist(malli$residuals)
start(ennuste)
Box.test(malli$residuals,
lag = 20,
type = "Ljung-Box",
fitdf = p + q + P + Q) #p-arvo = 0.04046
summary(malli)
malli
aic(malli)
AIC(malli)
ccf(ele,temp816, lag.max=168)
ccf(ele,temp, lag.max=168)
